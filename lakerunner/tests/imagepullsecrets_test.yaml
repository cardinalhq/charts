suite: test imagePullSecrets configuration
templates:
  - ingest-logs-deployment.yaml
  - ingest-metrics-deployment.yaml
  - compact-logs-deployment.yaml
  - compact-metrics-deployment.yaml
  - rollup-metrics-deployment.yaml
  - query-api-statefulset.yaml
  - grafana-deployment.yaml
  - setup-job.yaml
  - pubsub-http-deployment.yaml
  - pubsub-sqs-deployment.yaml
tests:
  - it: should not render imagePullSecrets when empty
    set:
      global.imagePullSecrets: []
    templates:
      - ingest-logs-deployment.yaml
    asserts:
      - notExists:
          path: spec.template.spec.imagePullSecrets

  - it: should render single imagePullSecret
    set:
      global.imagePullSecrets:
        - private-registry
    templates:
      - ingest-logs-deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: private-registry
      - lengthEqual:
          path: spec.template.spec.imagePullSecrets
          count: 1

  - it: should render multiple imagePullSecrets
    set:
      global.imagePullSecrets:
        - private-registry-1
        - private-registry-2
        - dockerhub-secret
    templates:
      - ingest-logs-deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: private-registry-1
      - equal:
          path: spec.template.spec.imagePullSecrets[1].name
          value: private-registry-2
      - equal:
          path: spec.template.spec.imagePullSecrets[2].name
          value: dockerhub-secret
      - lengthEqual:
          path: spec.template.spec.imagePullSecrets
          count: 3

  - it: should apply imagePullSecrets to StatefulSet
    set:
      queryApi.enabled: true
      global.imagePullSecrets:
        - query-registry-secret
    templates:
      - query-api-statefulset.yaml
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: query-registry-secret

  - it: should apply imagePullSecrets to Job
    set:
      setup.enabled: true
      global.imagePullSecrets:
        - setup-registry-secret
    templates:
      - setup-job.yaml
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: setup-registry-secret

  - it: should apply imagePullSecrets to all Deployment types
    set:
      grafana.enabled: true
      pubsub.HTTP.enabled: true
      pubsub.SQS.enabled: true
      pubsub.SQS.queueURL: "https://sqs.us-east-1.amazonaws.com/123456789012/test-queue"
      pubsub.SQS.region: "us-east-1"
      global.imagePullSecrets:
        - universal-secret
    templates:
      - ingest-logs-deployment.yaml
      - grafana-deployment.yaml
      - pubsub-http-deployment.yaml
      - pubsub-sqs-deployment.yaml
    asserts:
      - template: ingest-logs-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: universal-secret
      - template: grafana-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: universal-secret
      - template: pubsub-http-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: universal-secret
      - template: pubsub-sqs-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: universal-secret

  - it: should handle special characters in secret names
    set:
      global.imagePullSecrets:
        - "my-registry.io-secret"
        - "registry_with_underscores"
        - "registry-123-secret"
    templates:
      - ingest-logs-deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: "my-registry.io-secret"
      - equal:
          path: spec.template.spec.imagePullSecrets[1].name
          value: "registry_with_underscores"
      - equal:
          path: spec.template.spec.imagePullSecrets[2].name
          value: "registry-123-secret"

  - it: should work with null imagePullSecrets
    set:
      global.imagePullSecrets: null
    templates:
      - ingest-logs-deployment.yaml
    asserts:
      - notExists:
          path: spec.template.spec.imagePullSecrets

  - it: should render imagePullSecrets consistently across all pod-creating resources
    set:
      setup.enabled: true
      queryApi.enabled: true
      grafana.enabled: true
      pubsub.HTTP.enabled: true
      global.imagePullSecrets:
        - consistent-secret
    templates:
      - ingest-logs-deployment.yaml
      - ingest-metrics-deployment.yaml
      - compact-logs-deployment.yaml
      - compact-metrics-deployment.yaml
      - rollup-metrics-deployment.yaml
      - query-api-statefulset.yaml
      - grafana-deployment.yaml
      - setup-job.yaml
      - pubsub-http-deployment.yaml
    asserts:
      - template: ingest-logs-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: ingest-metrics-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: compact-logs-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: compact-metrics-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: rollup-metrics-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: query-api-statefulset.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: grafana-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: setup-job.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret
      - template: pubsub-http-deployment.yaml
        equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: consistent-secret