suite: test security configuration
values:
  - ../values.yaml
set:
  cloudProvider.aws.region: us-west-2
templates:
  # Core lakerunner image components
  - setup-job.yaml
  - ingest-logs-deployment.yaml
  - ingest-metrics-deployment.yaml
  - ingest-traces-deployment.yaml
  - compact-logs-deployment.yaml
  - compact-metrics-deployment.yaml
  - compact-traces-deployment.yaml
  - rollup-metrics-deployment.yaml
  - sweeper-deployment.yaml
  - monitoring-deployment.yaml
  # PubSub components
  - pubsub-http-deployment.yaml
  - pubsub-sqs-deployment.yaml
  - pubsub-gcp-deployment.yaml
  # Query components (different images)
  - query-api-v2-deployment.yaml
  - query-worker-v2-deployment.yaml
  # Other components
  - grafana-deployment.yaml
  # RBAC components
  - serviceaccount.yaml
  - role.yaml
tests:
  # Test all lakerunner image components
  - it: should set non-root security context for all lakerunner pods
    templates:
      - setup-job.yaml
      - ingest-logs-deployment.yaml
      - ingest-metrics-deployment.yaml
      - ingest-traces-deployment.yaml
      - compact-logs-deployment.yaml
      - compact-metrics-deployment.yaml
      - compact-traces-deployment.yaml
      - rollup-metrics-deployment.yaml
      - sweeper-deployment.yaml
      - monitoring-deployment.yaml
    set:
      ingestLogs.enabled: true
      ingestMetrics.enabled: true
      ingestTraces.enabled: true
      compactLogs.enabled: true
      compactMetrics.enabled: true
      compactTraces.enabled: true
      rollupMetrics.enabled: true
      sweeper.enabled: true
      monitoring.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 65532
      - equal:
          path: spec.template.spec.securityContext.runAsGroup
          value: 65532

  - it: should set container security context for all lakerunner components
    templates:
      - setup-job.yaml
      - ingest-logs-deployment.yaml
      - ingest-metrics-deployment.yaml
      - ingest-traces-deployment.yaml
      - compact-logs-deployment.yaml
      - compact-metrics-deployment.yaml
      - compact-traces-deployment.yaml
      - rollup-metrics-deployment.yaml
      - sweeper-deployment.yaml
      - monitoring-deployment.yaml
    set:
      ingestLogs.enabled: true
      ingestMetrics.enabled: true
      ingestTraces.enabled: true
      compactLogs.enabled: true
      compactMetrics.enabled: true
      compactTraces.enabled: true
      rollupMetrics.enabled: true
      sweeper.enabled: true
      monitoring.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.capabilities.drop[0]
          value: "ALL"
      - equal:
          path: spec.template.spec.containers[0].securityContext.seccompProfile.type
          value: "RuntimeDefault"

  # Test PubSub components
  - it: should set security context for PubSub components
    templates:
      - pubsub-http-deployment.yaml
      - pubsub-sqs-deployment.yaml
      - pubsub-gcp-deployment.yaml
    set:
      pubsub.HTTP.enabled: true
      pubsub.SQS.enabled: true
      pubsub.SQS.queueURL: "https://sqs.us-east-2.amazonaws.com/123456789012/test-queue"
      pubsub.GCP.enabled: true
      pubsub.GCP.projectID: "test-project"
      pubsub.GCP.subscriptionID: "test-subscription"
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 65532
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.capabilities.drop[0]
          value: "ALL"
      - equal:
          path: spec.template.spec.containers[0].securityContext.seccompProfile.type
          value: "RuntimeDefault"

  # Test query components (different images)
  - it: should set security context for query components
    templates:
      - query-api-v2-deployment.yaml
      - query-worker-v2-deployment.yaml
    set:
      queryApi.enabled: true
      queryWorker.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 65532
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.capabilities.drop[0]
          value: "ALL"
      - equal:
          path: spec.template.spec.containers[0].securityContext.seccompProfile.type
          value: "RuntimeDefault"

  # Test Grafana component (uses different user ID)
  - it: should set security context for Grafana
    templates:
      - grafana-deployment.yaml
    set:
      grafana.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 472  # Grafana standard user
      - equal:
          path: spec.template.spec.securityContext.runAsGroup
          value: 472
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.capabilities.drop[0]
          value: "ALL"
      - equal:
          path: spec.template.spec.containers[0].securityContext.seccompProfile.type
          value: "RuntimeDefault"

  - it: should create service account when enabled
    set:
      serviceAccount.create: true
      serviceAccount.name: "test-sa"
    templates:
      - serviceaccount.yaml
    asserts:
      - isKind:
          of: ServiceAccount
      - equal:
          path: metadata.name
          value: "test-sa"

  - it: should create role with correct permissions
    templates:
      - role.yaml
    asserts:
      - isKind:
          of: Role
        documentIndex: 0
      - contains:
          path: rules
          content:
            apiGroups: [""]
            resources: ["pods", "services"]
            verbs: ["get", "list", "watch"]
        documentIndex: 0

  - it: should use correct service account in pods
    set:
      serviceAccount.create: true
      serviceAccount.name: "custom-sa"
      ingestLogs.enabled: true
    templates:
      - ingest-logs-deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: "custom-sa"
