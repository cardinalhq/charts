{{- if .Values.grafana.enabled -}}
{{- /* Check if multiple replicas require external database configuration */ -}}
{{- if gt (.Values.grafana.replicas | int) 1 -}}
  {{- $hasExternalDB := false -}}
  {{- range .Values.grafana.env -}}
    {{- if eq .name "GF_DATABASE_TYPE" -}}
      {{- $hasExternalDB = true -}}
    {{- end -}}
  {{- end -}}
  {{- range .Values.global.env -}}
    {{- if eq .name "GF_DATABASE_TYPE" -}}
      {{- $hasExternalDB = true -}}
    {{- end -}}
  {{- end -}}
  {{- if not $hasExternalDB -}}
    {{- fail (printf "Grafana replicas is set to %d but GF_DATABASE_TYPE is not configured. Multiple Grafana replicas require an external database (PostgreSQL/MySQL) since SQLite cannot be shared. Please configure grafana.env with GF_DATABASE_TYPE and related database connection settings." (.Values.grafana.replicas | int)) -}}
  {{- end -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lakerunner.fullname" . }}-grafana
  labels:
    {{- include "lakerunner.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
  {{ include "lakerunner.annotations" . | nindent 2 }}
spec:
  replicas: {{ .Values.grafana.replicas }}
  selector:
    matchLabels:
      {{- include "lakerunner.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{- include "lakerunner.labels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
      {{- include "lakerunner.annotations" . | nindent 6 }}
    spec:
      serviceAccountName: {{ include "lakerunner.serviceAccountName" . }}
      terminationGracePeriodSeconds: 120
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      {{- include "lakerunner.imagePullSecrets" . | nindent 6 }}
      {{- include "lakerunner.sched.nodeSelector" (list .Values.global.nodeSelector .Values.grafana.nodeSelector) | nindent 6 }}
      {{- include "lakerunner.sched.tolerations"  (list .Values.global.tolerations  .Values.grafana.tolerations)  | nindent 6 }}
      {{- include "lakerunner.sched.affinity"     (list .Values.global.affinity     .Values.grafana.affinity)     | nindent 6 }}
      containers:
      - name: grafana
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        image: {{ include "lakerunner.image" (list .Values.grafana.image .) }}
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy | default .Values.global.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: healthcheck
          containerPort: {{ .Values.global.healthProbes.healthcheckPort }}
          protocol: TCP
        env:
          - name: GF_SECURITY_ADMIN_USER
            value: "admin"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "admin"
          - name: GF_SERVER_HTTP_PORT
            value: "3000"
          - name: GF_SECURITY_ALLOW_EMBEDDING
            value: "true"
          - name: GF_INSTALL_PLUGINS
            value: {{ if .Values.grafana.additionalPlugins }}{{ printf "%s,%s" .Values.grafana.cardinalPlugin.url .Values.grafana.additionalPlugins | quote }}{{ else }}{{ .Values.grafana.cardinalPlugin.url | quote }}{{ end }}
          - name: GF_SERVER_ROOT_URL
            value: "%(protocol)s://%(domain)s:%(http_port)s"
          {{- include "lakerunner.injectEnv" (list . .Values.grafana) | nindent 8 }}
        {{- include "lakerunner.healthProbes" (list . .Values.grafana) | nindent 8 }}
        resources:
          {{- toYaml .Values.grafana.resources | nindent 10 }}
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
      volumes:
      {{- include "lakerunner.ephemeralVolumeBasic" (list "grafana-storage" .) | nindent 6 }}
      - name: grafana-datasources
        configMap:
          name: {{ include "lakerunner.fullname" . }}-grafana-datasources
{{- end }} 