{{- if .Values.grafana.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lakerunner.fullname" . }}-grafana
  labels:
    {{- include "lakerunner.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
  {{ include "lakerunner.annotations" . | nindent 2 }}
spec:
  replicas: {{ .Values.grafana.replicas }}
  selector:
    matchLabels:
      {{- include "lakerunner.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{- include "lakerunner.labels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
      {{- include "lakerunner.annotations" . | nindent 6 }}
    spec:
      serviceAccountName: {{ include "lakerunner.serviceAccountName" . }}
      terminationGracePeriodSeconds: 120
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      {{- include "lakerunner.imagePullSecrets" . | nindent 2 }}
      containers:
      - name: grafana
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
          - name: GF_SECURITY_ADMIN_USER
            value: "admin"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "admin"
          - name: GF_SERVER_HTTP_PORT
            value: "3000"
          - name: GF_SERVER_ROOT_URL
            value: "%(protocol)s://%(domain)s:%(http_port)s"
          {{- include "lakerunner.injectEnv" (list . .Values.grafana) | nindent 8 }}
        resources:
          {{- toYaml .Values.grafana.resources | nindent 10 }}
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: {{ include "lakerunner.fullname" . }}-grafana-datasources
{{- end }} 