{{- if .Values.pubsub.SQS.enabled -}}
{{- if not .Values.pubsub.SQS.queueURL -}}
{{- fail "pubsub.SQS.queueURL is required when pubsub.SQS.enabled is true" -}}
{{- end -}}
{{- if not .Values.pubsub.SQS.region -}}
{{- fail "pubsub.SQS.region is required when pubsub.SQS.enabled is true" -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lakerunner.fullname" . }}-pubsub-sqs
  labels:
    {{- include "lakerunner.labels" . | nindent 4 }}
    app.kubernetes.io/component: pubsub-sqs
  {{ include "lakerunner.annotations" . | nindent 2 }}
spec:
  replicas: {{ .Values.pubsub.SQS.replicas }}
  selector:
    matchLabels:
      {{- include "lakerunner.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: pubsub-sqs
  template:
    metadata:
      labels:
        {{- include "lakerunner.labels" . | nindent 8 }}
        app.kubernetes.io/component: pubsub-sqs
      {{- include "lakerunner.annotations" . | nindent 6 }}
    spec:
      serviceAccountName: {{ include "lakerunner.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.pubsub.SQS.terminationGracePeriodSeconds }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
      {{- include "lakerunner.imagePullSecrets" . | nindent 6 }}
      containers:
      - name: pubsub
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        image: {{ include "lakerunner.image" (list .Values.pubsub.SQS.image .) }}
        imagePullPolicy: {{ .Values.pubsub.SQS.image.pullPolicy | default .Values.global.image.pullPolicy }}
      {{- include "lakerunner.sched.nodeSelector" (list .Values.global.nodeSelector .Values.pubsub.SQS.nodeSelector) | nindent 6 }}
      {{- include "lakerunner.sched.tolerations"  (list .Values.global.tolerations  .Values.pubsub.SQS.tolerations)  | nindent 6 }}
      {{- include "lakerunner.sched.affinity"     (list .Values.global.affinity     .Values.pubsub.SQS.affinity)     | nindent 6 }}
        command: ["/app/bin/lakerunner"]
        args: ["pubsub", "sqs"]
        env:
          - name: OTEL_SERVICE_NAME
            value: {{ include "lakerunner.fullname" . }}-pubsub-sqs
          - name: SQS_QUEUE_URL
            value: {{ .Values.pubsub.SQS.queueURL | quote }}
          {{- if .Values.pubsub.SQS.region }}
          - name: SQS_REGION
            value: {{ .Values.pubsub.SQS.region | quote }}
          {{- end }}
          - name: SQS_ROLE_ARN
            value: {{ .Values.pubsub.SQS.roleARN | quote }}
          {{- include "lakerunner.injectEnv" (list . .Values.pubsub.SQS) | nindent 8 }}
        {{- if .Values.aws.inject }}
        envFrom:
        - secretRef:
            name: {{ include "lakerunner.awsSecretName" . }}
        {{- end }}
        resources:
          {{- toYaml .Values.pubsub.SQS.resources | nindent 10 }}
        {{- if eq .Values.storageProfiles.source "config" }}
        volumeMounts:
        - name: storage-profiles
          mountPath: /app/config/storage_profiles.yaml
          subPath: storage_profiles.yaml
          readOnly: true
        {{- end }}
      {{- if eq .Values.storageProfiles.source "config" }}
      volumes:
      - name: storage-profiles
        configMap:
          name: {{ include "lakerunner.storageProfilesConfigmapName" . }}
      {{- end }}
{{- end }}
