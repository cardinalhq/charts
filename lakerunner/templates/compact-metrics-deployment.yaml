{{- if .Values.compactMetrics.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lakerunner.fullname" . }}-compact-metrics
  labels:
    {{- include "lakerunner.labels" . | nindent 4 }}
    app.kubernetes.io/component: compact-metrics
  {{ include "lakerunner.annotations" . | nindent 2 }}
spec:
  {{- $scalingMode := include "lakerunner.autoscalingMode" (list .Values.compactMetrics.autoscaling .) }}
  {{- if eq $scalingMode "disabled" }}
  replicas: {{ .Values.compactMetrics.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lakerunner.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: compact-metrics
  template:
    metadata:
      labels:
        {{- include "lakerunner.labels" . | nindent 8 }}
        app.kubernetes.io/component: compact-metrics
      {{- include "lakerunner.annotations" . | nindent 6 }}
    spec:
      serviceAccountName: {{ include "lakerunner.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.compactMetrics.terminationGracePeriodSeconds }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
      {{- include "lakerunner.imagePullSecrets" . | nindent 2 }}
      containers:
      - name: compact-metrics
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        image: {{ include "lakerunner.image" (list .Values.compactMetrics.image .) }}
        imagePullPolicy: {{ .Values.compactMetrics.image.pullPolicy | default .Values.global.image.pullPolicy }}
      {{- include "lakerunner.sched.nodeSelector" (list .Values.global.nodeSelector .Values.compactMetrics.nodeSelector) | nindent 6 }}
      {{- include "lakerunner.sched.tolerations"  (list .Values.global.tolerations  .Values.compactMetrics.tolerations)  | nindent 6 }}
      {{- include "lakerunner.sched.affinity"     (list .Values.global.affinity     .Values.compactMetrics.affinity)     | nindent 6 }}
        command: ["/app/bin/lakerunner"]
        args: ["compact-metrics"]
        env:
          - name: OTEL_SERVICE_NAME
            value: {{ include "lakerunner.fullname" . }}-compact-metrics
          - name: TMPDIR
            value: /scratch
          {{- include "lakerunner.injectEnv" (list . .Values.compactMetrics) | nindent 8 }}
        {{- if .Values.aws.inject }}
        envFrom:
        - secretRef:
            name: {{ include "lakerunner.awsSecretName" . }}
        {{- end }}
        resources:
          {{- toYaml .Values.compactMetrics.resources | nindent 10 }}
        volumeMounts:
        {{- if eq .Values.storageProfiles.source "config" }}
        - name: storage-profiles
          mountPath: /app/config/storage_profiles.yaml
          subPath: storage_profiles.yaml
          readOnly: true
        {{- end }}
        - name: scratch
          mountPath: /scratch
      volumes:
      - name: scratch
        emptyDir:
          sizeLimit: {{ .Values.compactLogs.temporaryStorage.size | quote }}
      {{- if eq .Values.storageProfiles.source "config" }}
      - name: storage-profiles
        configMap:
          name: {{ include "lakerunner.storageProfilesConfigmapName" . }}
      {{- end }}
{{- end }}
