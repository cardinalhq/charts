{{- if .Values.queryWorker.enabled -}}
{{- if or (not .Values.aws.region) (eq .Values.aws.region "") (eq .Values.aws.region "CHANGEME") (eq .Values.aws.region "us-test-1") -}}
{{- fail (printf "aws.region must be set to a valid AWS region when queryWorker is enabled (current value: %q)" .Values.aws.region) -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lakerunner.fullname" . }}-query-worker
  labels:
    {{- include "lakerunner.labels" . | nindent 4 }}
    app.kubernetes.io/component: query-worker
    lakerunner.cardinalhq.io/component: query-worker
  {{ include "lakerunner.annotations" . | nindent 2 }}
spec:
  {{- if gt (int .Values.queryWorker.initialReplicas) 0 }}
  replicas: {{ .Values.queryWorker.initialReplicas }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "lakerunner.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: query-worker
  template:
    metadata:
      labels:
        {{- include "lakerunner.labels" . | nindent 8 }}
        app.kubernetes.io/component: query-worker
        lakerunner.cardinalhq.io/component: query-worker
      {{- include "lakerunner.annotations" . | nindent 6 }}
    spec:
      serviceAccountName: {{ include "lakerunner.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.queryWorker.terminationGracePeriodSeconds }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
      {{- include "lakerunner.imagePullSecrets" . | nindent 6 }}
      {{- include "lakerunner.sched.nodeSelector" (list .Values.global.nodeSelector .Values.queryWorker.nodeSelector) | nindent 6 }}
      {{- include "lakerunner.sched.tolerations"  (list .Values.global.tolerations  .Values.queryWorker.tolerations)  | nindent 6 }}
      {{- include "lakerunner.sched.affinity"     (list .Values.global.affinity     .Values.queryWorker.affinity)     | nindent 6 }}
      containers:
      - name: query-worker
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        image: {{ include "lakerunner.image" (list .Values.queryWorker.image .) }}
        imagePullPolicy: {{ .Values.queryWorker.image.pullPolicy | default .Values.global.image.pullPolicy }}
        ports:
        - containerPort: 7101
          name: http
        env:
          - name: OTEL_SERVICE_NAME
            value: {{ include "lakerunner.fullname" . }}-query-worker
          - name: METRIC_PREFIX
            value: {{ include "lakerunner.fullname" . }}-query-worker
          - name: HOME
            value: "/tmp"
          - name: QUERY_STACK
            value: local
          - name: CARDINALHQ_ENVIRONMENT
            value: test
          - name: SPRING_PROFILES_ACTIVE
            value: aws
          - name: AWS_REGION
            value: {{ .Values.aws.region | quote }}
          {{- if eq .Values.apiKeys.source "config" }}
          - name: API_KEYS_FILE
            value: /app/config/apikeys.yaml
          {{- end }}
          - name: TOKEN_HMAC256_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "lakerunner.tokenSecretName" . }}
                key: TOKEN
          - name: QUERY_API_PORT
            value: "7101"
          - name: QUERY_API_LABEL_SELECTOR
            value: "lakerunner.cardinalhq.io/instance={{ .Release.Name }},lakerunner.cardinalhq.io/component=query-api"
          - name: QUERY_API_DEPLOYMENT_TYPE
            value: "statefulset"
          {{- include "lakerunner.injectEnv" (list . .Values.queryWorker) | nindent 8 }}
        envFrom:
          - secretRef:
              name: {{ include "lakerunner.awsSecretName" . }}
        resources:
          {{- toYaml .Values.queryWorker.resources | nindent 10 }}
        volumeMounts:
        {{- if eq .Values.storageProfiles.source "config" }}
        - name: storage-profiles
          mountPath: /app/config/storage_profiles.yaml
          subPath: storage_profiles.yaml
          readOnly: true
        {{- end }}
        {{- if eq .Values.apiKeys.source "config" }}
        - name: apikeys
          mountPath: /app/config/apikeys.yaml
          subPath: apikeys.yaml
          readOnly: true
        {{- end }}
        - name: scratch
          mountPath: /db
      volumes:
      {{- if eq .Values.storageProfiles.source "config" }}
      - name: storage-profiles
        configMap:
          name: {{ include "lakerunner.storageProfilesConfigmapName" . }}
      {{- end }}
      {{- if eq .Values.apiKeys.source "config" }}
      - name: apikeys
        secret:
          secretName: {{ include "lakerunner.apiKeysSecretName" . }}
      {{- end }}
      - name: scratch
        emptyDir:
          sizeLimit: {{ .Values.queryWorker.temporaryStorage.size | quote }}
{{- end }}
