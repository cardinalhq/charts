{{- if and .Values.setup (hasKey .Values.setup "enabled" | ternary .Values.setup.enabled true) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "lakerunner.fullname" . }}-setup
  labels:
    {{- include "lakerunner.labels" . | nindent 4 }}
  annotations:
    {{- include "lakerunner.annotationPairs" . | nindent 2 }}
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "lakerunner.labels" . | nindent 8 }}
      {{- include "lakerunner.annotations" . | nindent 6 }}
    spec:
      serviceAccountName: {{ include "lakerunner.serviceAccountName" . }}
      restartPolicy: Never
      terminationGracePeriodSeconds: 120
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
      {{- include "lakerunner.imagePullSecrets" . | nindent 6 }}
      {{- include "lakerunner.sched.nodeSelector" (list .Values.global.nodeSelector .Values.setup.nodeSelector) | nindent 6 }}
      {{- include "lakerunner.sched.tolerations"  (list .Values.global.tolerations  .Values.setup.tolerations)  | nindent 6 }}
      {{- include "lakerunner.sched.affinity"     (list .Values.global.affinity     .Values.setup.affinity)     | nindent 6 }}
      containers:
      - name: run-migrations
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        image: {{ include "lakerunner.image" (list .Values.setup.image .) }}
        imagePullPolicy: {{ .Values.setup.image.pullPolicy | default .Values.global.image.pullPolicy }}
        command: ["/app/bin/lakerunner"]
        args: ["setup"]
        env:
          - name: OTEL_SERVICE_NAME
            value: {{ include "lakerunner.fullname" . }}-setup
          {{- include "lakerunner.injectEnv" (list . .Values.setup) | nindent 8 }}
          {{- include "lakerunner.cardinalTelemetryEnv" . | nindent 10 }}
          {{- include "lakerunner.kafkaEnv" . | nindent 10 }}
        resources:
          {{- toYaml .Values.setup.resources | nindent 10 }}
        {{- if or (eq .Values.storageProfiles.source "config") (eq .Values.apiKeys.source "config") (and .Values.setup.kafka.enabled (eq .Values.kafkaTopics.source "config")) }}
        volumeMounts:
        {{- if eq .Values.storageProfiles.source "config" }}
        - name: storage-profiles
          mountPath: /app/config/storage_profiles.yaml
          subPath: storage_profiles.yaml
          readOnly: true
        {{- end }}
        {{- if eq .Values.apiKeys.source "config" }}
        - name: apikeys
          mountPath: /app/config/apikeys.yaml
          subPath: apikeys.yaml
          readOnly: true
        {{- end }}
        {{- if and .Values.setup.kafka.enabled (eq .Values.kafkaTopics.source "config") }}
        - name: kafka-topics
          mountPath: /app/config/kafka_topics.yaml
          subPath: kafka_topics.yaml
          readOnly: true
        {{- end }}
        {{- end }}
      {{- if or (eq .Values.storageProfiles.source "config") (eq .Values.apiKeys.source "config") (and .Values.setup.kafka.enabled (eq .Values.kafkaTopics.source "config")) }}
      volumes:
      {{- if eq .Values.storageProfiles.source "config" }}
      - name: storage-profiles
        configMap:
          name: {{ include "lakerunner.storageProfilesConfigmapName" . }}
      {{- end }}
      {{- if eq .Values.apiKeys.source "config" }}
      - name: apikeys
        secret:
          secretName: {{ include "lakerunner.apiKeysSecretName" . }}
      {{- end }}
      {{- if and .Values.setup.kafka.enabled (eq .Values.kafkaTopics.source "config") }}
      - name: kafka-topics
        configMap:
          name: {{ include "lakerunner.kafkaTopicsConfigmapName" . }}
      {{- end }}
      {{- end }}
  backoffLimit: 0
{{- end }}
